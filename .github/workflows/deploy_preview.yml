# Deploys a preview build when a pull request is commented with .deploy
# Supported issue comments:
#   - .deploy storybook — Deploys Storybook in preview environment
#   - .deploy site   — Deploys the site in preview environment, same as .deploy

name: Deploy to preview
on:
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  statuses: read

jobs:
  Deploy_Preview_Target:
    # Only run on pull request comments that start with .deploy
    #   - ⚠️ Draft pull requests will not deploy
    #   - ⚠️ Pull request must be up to date
    if: ${{ github.event.issue.pull_request  && startsWith(github.event.comment.body, '.deploy')  }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    runs-on: ubuntu-latest
    steps:
      # This will be used to "gate" all future steps below and conditionally trigger steps/deployments
      - uses: github/branch-deploy@v9
        id: branch-deploy
        with:
          trigger: '.deploy'
          # The default environment the action will use with .deploy
          environment: 'site'
          # Eg. `.deploy site` to deploy site to preview (same as `.deploy`) or `.deploy storybook`
          environment_targets: 'storybook,site'
          # We have no way of getting the deployment URL without running Vercel deploy.
          # This could be solved by using the DEPLOY_MESSAGE environment variable which comes with size limits and may cause failures.
          #   - see https://github.com/github/branch-deploy/blob/main/docs/custom-deployment-messages.md.
          # Can't use a combination of env var and file, see https://github.com/github/branch-deploy/blob/d4ffc4a10bb718f2e164a654d51fffb04eed65cc/src/functions/post-deploy-message.js#L27-L50
          environment_urls: 'site|https://vercel.com/nykanen/junat-live/deployments,storybook|https://vercel.com/nykanen/storybook/deployments'
          reaction: '+1'
          # Only check that required workflows were a success, default behaviour is to check all.
          checks: required

      - uses: actions/checkout@v4
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        with:
          ref: ${{ steps.branch-deploy.outputs.ref }}

      - uses: pnpm/action-setup@v4
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}

      - name: Use Node.js 21
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: 'pnpm'

      - name: Turbo Cache
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        id: turbo-cache
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-21.x-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-21.x

      - name: Get pnpm store directory
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pnpm install

      - name: Build packages
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pnpm build --filter=\!site && pnpm i

      - name: Install Vercel CLI
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pnpm add -g vercel@latest

      # Dynamically get the project id and add it to env.
      - name: Export project id
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        shell: bash
        run: |
          echo VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID >> $GITHUB_ENV
        env:
          VERCEL_PROJECT_ID: ${{
            steps.branch-deploy.outputs.environment == 'site'
            && secrets.VERCEL_PROJECT_ID  || secrets.VERCEL_STORYBOOK_PROJECT_ID
            }}

      - name: Pull Vercel Environment Information
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      # -----------------------------------------------------------------1
      # Deploy site to preview for `.deploy` and `.deploy site`
      - name: Build Site Artifacts
        if: |
          ${{ steps.branch-deploy.outputs.continue == 'true' }} &&
          ${{ steps.branch-deploy.outputs.noop != 'true' }}     &&
          ${{ steps.branch-deploy.outputs.environment == 'site' }}
        run: |
          vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Site Artifacts to Vercel
        if: |
          ${{ steps.branch-deploy.outputs.continue == 'true' }} &&
          ${{ steps.branch-deploy.outputs.noop != 'true' }}     &&
          ${{ steps.branch-deploy.outputs.environment == 'site'}}
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        # -----------------------------------------------------------------1

        # -----------------------------------------------------------------2
        # Deploy Storybook to preview for `.deploy storybook`
      - name: Build Storybook Artifacts
        if: |
          ${{ steps.branch-deploy.outputs.continue == 'true' }} &&
          ${{ steps.branch-deploy.outputs.noop != 'true' }}     &&
          $${{ steps.branch-deploy.outputs.environment == 'storybook' }}
        run: pnpm build-storybook

      - name: Deploy Storybook Artifacts to Vercel
        if: |
          ${{ steps.branch-deploy.outputs.continue == 'true' }} &&
          ${{ steps.branch-deploy.outputs.noop != 'true' }}     &&
          ${{ steps.branch-deploy.outputs.environment == 'storybook' }}
        run: vercel deploy ./site/storybook-static --token=${{ secrets.VERCEL_TOKEN }}
        # -----------------------------------------------------------------2
