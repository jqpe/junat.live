# On push to main run tests and then push changes to server.

name: Test and deploy

on:
  push:
    tags: ['r[0-9]+']

jobs:
  test:
    name: Test
    uses: ./.github/workflows/test.yml
    secrets:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker_image:
    name: Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./site/Dockerfile
          push: true
          tags: nykanen/junat:latest,nykanen/junat:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          secrets: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: [docker_image, test]

    env:
      NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
      NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - run: terraform init
      - run: terraform plan -var 'image_version=${{ github.ref_name }}' -var 'sentry_dsn=${{ secrets.SENTRY_DSN }}' -var 'sentry_auth_token=${{ secrets.SENTRY_AUTH_TOKEN }}'
      - run: terraform apply -auto-approve -input=false

  purge-cache:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
