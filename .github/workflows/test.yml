# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js test CI

on:
  pull_request:
    branches: [main]
  # sync codecov
  push:
    branches: [main]
  workflow_call:
    secrets:
      TURBO_TOKEN:
        required: false
      TURBO_TEAM:
        required: false

jobs:
  test:
    if: contains(github.event.pull_request.labels.*.name , 'skip-ci') == false
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node-version: [16.x, 19.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - uses: pnpm/action-setup@v2.2.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ matrix.node-version }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-${{ matrix.node-version }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm build --filter=\!site && pnpm i

      - name: Lint
        run: pnpm lint

      - name: Check types
        if: matrix.node-version == '19.x'
        run: pnpm check-types

      - name: Install Playwright
        if: matrix.node-version == '19.x'
        # Requires root permissions
        run: pnpm exec playwright install chromium --with-deps

      - name: Build Storybook
        if: matrix.node-version == '19.x'
        run: pnpm -C site build-storybook --quiet

      - name: Serve Storybook and test with coverage
        if: matrix.node-version == '19.x'
        run: pnpx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
          "pnpx serve site/storybook-static -p 6006" \
          "pnpx wait-on tcp:6006 && pnpm coverage"

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == '19.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info,./coverage/site.lcov.info
          verbose: true
  post-test:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Exit successfully
        run: exit 0
