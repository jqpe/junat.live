# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js test CI

on:
  pull_request:
    branches: [main]
  workflow_call:
    secrets:
      TURBO_TOKEN:
        required: false
      TURBO_TEAM:
        required: false
      SONAR_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - uses: pnpm/action-setup@v2.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ matrix.node-version }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

        # This step is required so that packages that rely on `publishConfig.directory` work correctly.
        # e.g. '@junat/digitraffic': link:../digitraffic/dist
      - name: Build statically linked packages
        run: pnpm --filter=@junat/digitraffic build

      - name: Lint
        run: pnpm lint

      - name: Test with coverage
        run: pnpm coverage

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
